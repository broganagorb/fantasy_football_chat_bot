name: ESPN Discord Bot

on:
  schedule:
    - cron: '30 15 * * 2'   # Tue 10:30 AM CT
    - cron: '00 23 * * 4'   # Thu 6:00 PM CT
    - cron: '30 17 * * 0'   # Sun 12:30 PM CT
    - cron: '30 03 * * 1'   # Mon 10:30 PM CT
  workflow_dispatch: {}

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install -U pip
          python -m pip install apscheduler requests espn_api DateTime

      # 1) Always post a short standings snapshot (guaranteed output)
      - name: Post standings snapshot
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          LEAGUE_ID:           ${{ secrets.LEAGUE_ID }}
          LEAGUE_YEAR:         ${{ secrets.LEAGUE_YEAR }}
          ESPN_S2:             ${{ secrets.ESPN_S2 }}
          SWID:                ${{ secrets.SWID }}
        run: |
          python - <<'PY'
          import os, json, requests
          from espn_api.football import League
          lid  = int(os.environ["LEAGUE_ID"])
          year = int(os.environ["LEAGUE_YEAR"])
          lg = League(league_id=lid, year=year,
                      espn_s2=os.environ.get("ESPN_S2"),
                      swid=os.environ.get("SWID"))
          try:
              teams = lg.standings()
          except Exception:
              teams = lg.teams
          lines = [f"**{lg.settings.name}** ({year}) â€” standings snapshot"]
          for idx, t in enumerate(teams, start=1):
              rec = f"{t.wins}-{t.losses}" + (f"-{t.ties}" if getattr(t,'ties',0) else "")
              pf  = getattr(t, 'points_for', None)
              lines.append(f"{idx}. {t.team_name} ({rec})" + (f" PF:{pf:.1f}" if isinstance(pf,(int,float)) else ""))
          requests.post(os.environ["DISCORD_WEBHOOK_URL"],
                        headers={"Content-Type":"application/json"},
                        data=json.dumps({"content":"\n".join(lines)[:1900]}))
          PY

      # 2) Run the full ESPN bot once (richer posts when its internal logic triggers)
      - name: Run ESPN bot once
        run: |
          python - <<'PY'
          from gamedaybot.espn import espn_bot
          espn_bot.espn_bot("init")
          PY
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          LEAGUE_ID:           ${{ secrets.LEAGUE_ID }}
          LEAGUE_YEAR:         ${{ secrets.LEAGUE_YEAR }}
          TIMEZONE:            ${{ secrets.TIMEZONE }}
          ESPN_S2:             ${{ secrets.ESPN_S2 }}
          SWID:                ${{ secrets.SWID }}
          START_DATE:          ${{ secrets.START_DATE }}
          END_DATE:            ${{ secrets.END_DATE }}
